<?php

/**
 * @file
 * stanford_basic_page_types.module
 */

use Drupal\node\NodeInterface;
use Symfony\Component\Finder\Finder;

/**
 * Implements hook_page_attachments().
 */
function stanford_basic_page_types_page_attachments(array &$attachments) {
  // Get the node from the route.
  $node = \Drupal::routeMatch()->getParameter('node');

  // Not a node.. Then just continue.
  if (!$node instanceof NodeInterface) {
    return;
  }

  $node_type = $node->getType();
  // Check for our type and add library if a match.
  if ($node_type == "stanford_page") {
    $attachments['#attached']['library'][] = "stanford_basic_page_types/node.stanford-page";
  }

}

/**
 * Implements hook_library_info_build().
 */
function stanford_basic_page_types_library_info_build() {
  $libraries = [];
  $module_path = drupal_get_path('module', 'stanford_basic_page_types');

  // Find all css files in the dist/css directory.
  $finder = new Finder();
  $finder->files()
    ->in("$module_path/dist/css")
    ->name('/.css$/');

  foreach ($finder as $file) {

    $local_path = str_replace("$module_path/", '', $file->getPath());
    $path_parts = explode('/', $local_path);
    // Remove `dist` and `css` parts.
    unset($path_parts[0], $path_parts[1]);

    // This is the directory the file lives in.
    $library_level = reset($path_parts);
    $bucket = 'node';
    $lib = basename($file->getFilename(), '.css');

    // Build the library definition.
    $libraries[trim("$bucket.$lib", '. ')] = [
      'css' => [
        $library_level => [
          "$local_path/{$file->getFileName()}" => [],
        ],
      ],
    ];
  }
  return $libraries;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function stanford_basic_page_types_preprocess_pattern_card(&$variables){
  // If the basic page is displayed in a card and both the banner image and meta
  // data image is displayed, remove the banner form the card and only use the
  // meta image.
  if (
    is_array($variables['card_image']) &&
    !empty($variables['card_image']['su_page_banner']['#items']) &&
    !empty($variables['card_image']['su_page_image']['#items'])
  ) {
    unset($variables['card_image']['su_page_banner']);
  }
}
