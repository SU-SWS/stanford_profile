<?php

/**
 * @file
 * stanford_profile_styles.module
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\editor\Entity\Editor;
use Drupal\node\NodeInterface;

/**
 * Implements hook_page_attachments().
 */
function stanford_profile_styles_page_attachments(array &$attachments) {

  // Always attach to a page.
  $attachments['#attached']['library'][] = 'stanford_profile_styles/stanford_profile_styles';

  // Attach admin styles to admin pages.
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($is_admin) {
    $attachments['#attached']['library'][] = 'stanford_profile_styles/admin';
  }

  // Get the node from the route.
  $node = \Drupal::routeMatch()->getParameter('node');

  // Not a node.. Then just continue.
  if (!$node instanceof NodeInterface) {
    return;
  }

  // Check for our type and add library if a match.
  if ($node->getType() == "stanford_page") {
    $attachments['#attached']['library'][] = 'stanford_profile_styles/stanford_page';

    // Check if stanford page is using a particular layout.
    $layout_target = $node->get('layout_selection')->getValue();
    if (isset($layout_target[0]['target_id']) && $layout_target[0]['target_id'] == "stanford_basic_page_full") {
      $attachments['#attached']['library'][] = "stanford_profile_styles/stanford_page_layout_full";
    }
  }
}

/**
 * Implements hook_field_widget_multivalue_WIDGET_TYPE_form_alter().
 */
function stanford_profile_styles_field_widget_multivalue_paragraphs_form_alter(array &$elements, FormStateInterface $form_state, array $context) {
  $elements['#attached']['library'][] = 'stanford_profile_styles/field_widgets';;
}

/**
 * Implements hook_preprocess_entity().
 */
function stanford_profile_styles_preprocess_paragraph(&$vars) {
  $type = $vars['paragraph']->bundle();
  if ($type == "stanford_wysiwyg") {
    $vars['#attached']['library'][] = "stanford_profile_styles/stanford_paragraph_wysiwyg";
  }
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function stanford_profile_styles_ckeditor_css_alter(array &$css, Editor $editor) {
  if (!$editor->hasAssociatedFilterFormat()) {
    return;
  }

  $known_formats = [
    'stanford_html',
    'stanford_minimal_html',
  ];

  if (in_array($editor->getFilterFormat()->id(), $known_formats)) {
    $css[] = drupal_get_path('module', 'stanford_profile_styles') . '/dist/css/stanford_profile_styles.ckeditor.css';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Move your field or group of fields to the node form options vertical tabs.
 */
function stanford_profile_styles_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // This has to go through process so that the vertical tabs are rendered.
  $form["#process"][] = "stanford_profile_styles_node_form_wide";
}

/**
 * Moves the advanced group down to below the content as vertical tabs.
 *
 * @param array $form
 *   The form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state array.
 *
 * @return array
 *   The altered form.
 */
function stanford_profile_styles_node_form_wide(array $form, FormStateInterface &$form_state) {

  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_state->getFormObject()->getEntity();
  if ($node->bundle() !== "stanford_page") {
    return $form;
  }

  $form['advanced']['#type'] = 'vertical_tabs';
  $form['meta']['#type'] = 'details';
  $form['meta']['#title'] = t('Publishing Information');
  $form['layout_selection']['#type'] = 'details';
  $form['layout_selection']['#title'] = t('Layout Options');
  $form['layout_selection']['#group'] = "advanced";
  $form['layout_selection']['#weight'] = -11;
  $form['#attached']['library'][] = 'stanford_profile_styles/node_form';

  return $form;
}
